name: Sync

on:
  schedule:
    - cron: "0 */3 * * *"
  workflow_dispatch:

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Disable the .NET first time experience to skip caching NuGet packages and speed up the build.
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending .NET CLI telemetry to Microsoft.
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x.x

      - name: Setup BUTR GPR
        uses: actions/setup-dotnet@v3
        with:
          source-url: https://nuget.pkg.github.com/BUTR/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build DotNetTools
        run: dotnet build src/DotNetTools/DotNetTools.csproj
        shell: pwsh

      - name: Run DotNetTools check-news
        id: date_checker
        run: >-
           $date = dotnet run --project src/DotNetTools/DotNetTools.csproj --no-build -- check-news --appId 261550 --count 10;
           echo "::set-output name=date::$date";
        env:
          DATEOFLASTPOST: ${{secrets.SC_DATE_OF_LAST_POST}}
        continue-on-error: true
        shell: pwsh
        
      - name: Echo steps.date_checker.outputs.date
        run: |
          echo ${{steps.date_checker.outputs.date}} | sed 's/./& /g'
        
      - name: Sync SC_DATE_OF_LAST_POST
        uses: BUTR/secrets-sync-action@v1.7.1
        if: ${{steps.date_checker.outputs.date != 0}}
        with:
          SECRETS: |
            ^SC_
          REPOSITORIES: |
            ^BUTR/.github
          GITHUB_TOKEN: ${{secrets.REPO_ACCESS_TOKEN}}
        env:
          SC_DATE_OF_LAST_POST: ${{steps.date_checker.outputs.date}}

      - name: Run DotNetTools get-branches
        id: branches
        run: >-
           if ($${{steps.date_checker.outputs.date != 0}}) {
             $output_v = dotnet run --project src/DotNetTools/DotNetTools.csproj --no-build -- get-latest-version --steamLogin ${{secrets.STEAM_LOGIN}} --steamPassword ${{secrets.STEAM_PASSWORD}} --steamAppId 261550 --steamDepotId 261551 --steamDepotId 261552 --steamOS windows --steamOSArch 64;
             echo "::set-output name=json::$output_v"
           }
           if (!$${{steps.date_checker.outputs.date != 0}}) {
             echo "::set-output name=json::{}"
           }
        shell: pwsh
        
      - name: Echo steps.branches.outputs.json
        run: |
          echo ${{steps.branches.outputs.json}} | sed 's/./& /g'

      - name: Sync STABLE/BETA
        uses: BUTR/secrets-sync-action@v1.7.1
        if: ${{steps.date_checker.outputs.date != 0 && steps.branches.outputs.json != '{}'}}
        with:
          SECRETS: |
            ^SYNCED_
          REPOSITORIES: |
            ^BUTR
            ^Aragas/Bannerlord.MBOptionScreen
          GITHUB_TOKEN: ${{secrets.REPO_ACCESS_TOKEN}}
        env:
          SYNCED_GAME_STABLE_VERSION: ${{fromJson(steps.branches.outputs.json).stable}}
          SYNCED_GAME_BETA_VERSION: ${{fromJson(steps.branches.outputs.json).beta}}

      # Trigger Bannerlord.ReferenceAssemblies first so the NuGet packages are built
      - name: Dispatch
        uses: guilouro/multiple-repositories-dispatch@master
        if: ${{steps.date_checker.outputs.date != 0 && steps.branches.outputs.json != '{}'}}
        with:
          repo_token: ${{secrets.REPO_ACCESS_TOKEN}}
          repositories: |
            BUTR/Bannerlord.ReferenceAssemblies
          event_type: game_version_update
          client_payload: '{"github": ${{ toJson(github) }}}'

      - name: Sleep for 15 minutes
        uses: jakejarvis/wait-action@master
        if: ${{steps.date_checker.outputs.date != 0}}
        with:
          time: '15m'

      # Trigger projects that depend on the NuGet packages
      - name: Dispatch
        uses: guilouro/multiple-repositories-dispatch@master
        if: ${{steps.date_checker.outputs.date != 0 && steps.branches.outputs.json != '{}'}}
        with:
          repo_token: ${{secrets.REPO_ACCESS_TOKEN}}
          repositories: |
            BUTR/Bannerlord.ReferenceAssemblies.Documentation
            BUTR/Bannerlord.UIExtenderEx
            BUTR/Bannerlord.ButterLib
            Aragas/Bannerlord.MBOptionScreen
            BUTR/Bannerlord.BUTRLoader
            BUTR/Bannerlord.BUTR.Shared
            BUTR/Bannerlord.ReferenceAssemblies.Diff
            BUTR/AssemblyDiffer
          event_type: game_version_update
          client_payload: '{"github": ${{ toJson(github) }}}'
